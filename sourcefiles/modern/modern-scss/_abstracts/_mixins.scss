@use "sass:color";
@mixin border-radius($radius) {
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  box-shadow: $shadow;
}

@mixin transition($transition) {
  transition: $transition;
}

// @mixin font-size-loop($start, $end) {
//   @for $i from $start through $end {
//     .font-#{$i} {
//       font-size: #{$i}px;
//     }
//   }
// }

@mixin skinned-checkbox($color) {
  [type="checkbox"]:checked.chk--skinned + label:before {
    border-right: 2px solid $color;
    border-bottom: 2px solid $color;
  }
  [type="checkbox"].filled-in:checked.chk--skinned + label:after {
    border: 2px solid $color;
    background-color: $color;
  }
}

@mixin skinned-radio($color, $with-gap: false) {
  [type="radio"]:checked.radio--skinned + label:after {
    background-color: $color;
    border-color: $color;
  }
  @if $with-gap {
    [type="radio"].with-gap.radio--skinned:checked + label:before {
      border: 2px solid $color;
    }
    [type="radio"].with-gap.radio--skinned:checked + label:after {
      background-color: $color;
      border: 2px solid $color;
    }
  }
}

@mixin skinned-switch($color) {
  .switch label input[type="checkbox"]:checked:not(:disabled) ~ .lever.switch--skinned:active:after {
    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(color.red($color), color.green($color), color.blue($color), 0.1);
  }
  .switch label input[type="checkbox"]:checked + .lever.switch--skinned {
    background-color: rgba(color.red($color), color.green($color), color.blue($color), 0.5);
  }
  .switch label input[type="checkbox"]:checked + .lever.switch--skinned:after {
    background-color: $color;
  }
}

@mixin skinned-nav-tabs($color) {
  .nav-tabs.tab--skinned > li > a:before {
    border-bottom: 2px solid $color;
  }
}
